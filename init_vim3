set clipboard+=unnamedplus
call plug#begin("~/vimfiles/plugged")
  " Theme
  Plug 'dracula/vim'


  " Language Client
  Plug 'neoclide/coc.nvim', {'branch': 'release'}
  let g:coc_global_extensions = ['coc-emmet', 'coc-css', 'coc-html', 'coc-json', 'coc-prettier', 'coc-tsserver', 'coc-phpls']
  " TypeScript Highlighting
  Plug 'leafgarland/typescript-vim'
  Plug 'peitalin/vim-jsx-typescript'

  Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
  Plug 'tpope/vim-fugitive'
  Plug 'nvim-lua/plenary.nvim'
  Plug 'nvim-telescope/telescope.nvim', { 'tag': '0.1.0' }

  Plug 'Xuyuanp/nerdtree-git-plugin'
  Plug 'gabesoft/vim-ags'
  " File Explorer with Icons
  Plug 'scrooloose/nerdtree'
  Plug 'chiel92/vim-autoformat'
  Plug 'APZelos/blamer.nvim'

  Plug 'nvim-treesitter/nvim-treesitter'

  Plug 'airblade/vim-rooter'

  Plug 'vim-airline/vim-airline-themes'
  Plug 'tpope/vim-commentary'
  Plug 'ryanoasis/vim-devicons'

  " File Search
call plug#end()



" Theme
syntax enable


let g:blamer_enabled = 1
let g:vim_svelte_plugin_load_full_syntax = 1
let g:webdevicons_enable = 1
let g:webdevicons_enable_nerdtree = 1

let g:NERDTreeShowHidden = 1
let g:NERDTreeMinimalUI = 1
let g:NERDTreeIgnore = []
let g:NERDTreeStatusline = ''
" Automaticaly close nvim if NERDTree is only thing left open
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
" ToggleK
nnoremap <silent> <C-b> :NERDTreeToggle<CR>

nnoremap <C-p> :FZF<CR>
let g:fzf_action = {
  \ 'ctrl-t': 'tab split',
  \ 'ctrl-s': 'split',
  \ 'ctrl-v': 'vsplit'
  \}
" requires silversearcher-ag
" used to ignore gitignore files





let  g:nerdtree_tabs_open_on_console_startup=1
let g:WebDevIconsUnicodeDecorateFolderNodes=1
let g:NERDTreeGitStatusNodeColorization=1
let g:WebDevIconsUnicodeDecorateFolderNodes = 1
let g:NERDTreeGitStatusWithFlags = 1

let g:NERDTreeGitStatusIndicatorMapCustom = {
                \ 'Modified'  :'âœ¹',
                \ 'Staged'    :'âœš',
                \ 'Untracked' :'âœ­',
                \ 'Renamed'   :'âžœ',
                \ 'Unmerged'  :'â•',
                \ 'Deleted'   :'âœ–',
                \ 'Dirty'     :'âœ—',
                \ 'Ignored'   :'â˜’',
                \ 'Clean'     :'âœ”ï¸Ž',
                \ 'Unknown'   :'?',
                \ }
let g:NERDTreeColorMapCustom = {
    \ "Modified"  : "#528AB3",
    \ "Staged"    : "#538B54",
    \ "Untracked" : "#BE5849",
    \ "Dirty"     : "#299999",
    \ "Clean"     : "#87939A"
    \ }



let g:airline_theme = 'dark'
let g:airline#extensions#tabline#left_sep = ' '
let g:airline#extensions#tabline#left_alt_sep = '|'
let g:ctrlp_user_command = 'Ag -l --nocolor -g "" %s'
noremap <C-n> :tabnew<CR>
nnoremap s gT
nnoremap f gt
nnoremap tt :update<cr>
nnoremap <C-x>  :tabclose<CR>
nnoremap <C-q> :wq!<cr>


set relativenumber

inoremap jk <ESC>

" everything (default)
let g:rooter_targets = '/,*'

" All files
let g:rooter_targets = '*'

" YAML files
let g:rooter_targets = '*.yml,*.yaml'

" Directories and YAML files
let g:rooter_targets = '/,*.yml,*.yaml'


nnoremap ff <cmd>Telescope find_files<cr>
nnoremap fg <cmd>Telescope live_grep<cr>
nnoremap fb <cmd>Telescope buffers<cr>
nnoremap fh <cmd>Telescope help_tags<cr>


" Make <CR> to accept selected completion item or notify coc.nvim to format
" <C-g>u breaks current undo, please make your own choice.
inoremap <silent><expr> <CR> coc#pum#visible() ? coc#pum#confirm()
                              \: "\<C-g>u\<CR>\<c-r>=coc#on_enter()\<CR>"
